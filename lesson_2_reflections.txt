## What happens when you initialize a repository? Why do you need to do it?

Initializing a repository creates the .git directory and subdirectories that
will be used for holding the revision history of the project. Why do you need to
do it? You have to start somewhere!

## How is the staging area different from the working directory and the
## repository? What value do you think it offers?

The staging area holds a pointer to a version of a file or files that are ready
to be committed to the repository. Since it doesn't have to hold ALL of the
changes in your working directory if gives you the ability to commit only
certain changes and separate different commits in a more logical manner.

## How can you use the staging area to make sure you have one commit per logical
## change?

You can group commits logically by only adding files implementing one logical
change to the staging area before committing them.

## What are some situations when branches would be helpful in keeping your
## history organized? How would branches help?

Branches are useful for developing new features in isolation from each other and
the main path of development. They also make it easier to refer to different
development paths by name instead of commit IDs, they are much easier to read.

## How do the diagrams help you visualize the branch structure?

The provide a graphic representation of the ancestry of the current commit, just
like a family tree.
